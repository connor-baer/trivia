{"version":3,"sources":["assets/logo.svg","pages/Start/Start.js","pages/Start/index.js","components/Question/Question.js","components/Question/index.js","components/AnswerList/components/Answer/Answer.js","components/AnswerList/components/Answer/index.js","components/AnswerList/AnswerList.js","components/AnswerList/index.js","pages/Trivia/Trivia.js","pages/Trivia/index.js","components/Leaderboard/Leaderboard.js","components/Leaderboard/index.js","pages/Finish/Finish.js","pages/Finish/index.js","pages/Leaderboard/Leaderboard.js","pages/Leaderboard/index.js","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","logo_ref","react_default","a","createElement","fill","d","__webpack_require__","p","Start","_ref","navigate","resetScore","setCurrentUser","currentUser","Fragment","Heading","Label","htmlFor","Input","onChange","event","value","placeholder","id","Button","primary","onClick","disabled","style","marginTop","plain","Question","styled","theme","css","_templateObject","fontWeight","regular","propTypes","children","PropTypes","string","isRequired","Answer","RadioButton","Answer_templateObject","spacings","kilo","bit","_ref2","checked","_templateObject2","bold","_ref3","selected","correct","_templateObject3","colors","success","_ref4","_templateObject4","danger","bool","defaultProps","Container","AnswerList_templateObject","AnswerList","answers","onSelect","map","option","className","objectWithoutProperties","components_Answer","name","onToggle","aria-labelledby","role","ScoreBadge","Badge","Trivia_templateObject","Trivia","state","question","questions","getQuestion","currentQuestionId","_this","nextQuestionId","Number","handleAnswer","answer","setState","handleNextQuestion","nextQuestion","props","incrementScore","finish","_this$props","updateLeaderboard","_this$props2","score","_this$state","color","concat","components_Question","components_AnswerList","options","Component","Leaderboard","rows","leaderboard","sort","b","user","marginBottom","Table","headers","rowHeaders","Finish","Text","components_Leaderboard","Page","circuit","themes","injectGlobalStyles","custom","n100","pageMap","start","play","Logo","width","height","viewBox","App_templateObject","App_templateObject2","white","tera","peta","App_templateObject3","App","route","prevState","toConsumableArray","dist_index_esm","App_Container","data-testid","Card","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fd29b62c.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#212933\",\n  d: \"M2.84,0 L33.597,0 C35.166,0 36.437,1.272 36.437,2.84 L36.437,33.655 C36.437,35.225 35.166,36.496 33.597,36.496 L2.84,36.496 C1.27,36.496 0,35.224 0,33.656 L0,2.84 C0,1.27 1.272,0 2.84,0 Z M22.504,15.786 L11.204,27.104 C11.009,27.314 11.014,27.641 11.217,27.844 C11.234,27.862 11.252,27.877 11.271,27.892 C14.618,30.806 19.696,30.669 22.881,27.479 C26.081,24.273 26.203,19.149 23.245,15.798 C23.04,15.594 22.713,15.59 22.504,15.786 Z M13.934,20.71 L25.234,9.393 C25.428,9.183 25.424,8.855 25.22,8.651 C25.203,8.635 25.185,8.619 25.167,8.605 C21.819,5.69 16.742,5.828 13.557,9.017 C10.356,12.224 10.234,17.347 13.192,20.699 L13.193,20.698 C13.397,20.902 13.725,20.906 13.933,20.71 L13.934,20.71 Z M48.322,21.849 C48.712,21.849 49.114,22.069 49.45,22.459 C50.082,23.236 51.04,23.354 51.55,23.354 C53.223,23.354 54.098,22.402 54.098,21.464 C54.098,20.181 52.776,19.663 51.244,19.066 C49.333,18.315 46.95,17.385 46.95,14.475 C46.95,11.648 49.354,10.167 51.731,10.167 C53.456,10.167 55.275,11.117 56.156,12.482 C56.305,12.704 56.383,12.978 56.383,13.274 C56.383,14.049 55.708,14.703 54.91,14.703 C54.49,14.703 54.107,14.475 53.776,14.031 C53.277,13.333 52.57,12.965 51.731,12.965 C50.393,12.965 49.794,13.724 49.794,14.475 C49.794,15.414 50.77,15.845 52.362,16.474 C54.402,17.281 56.942,18.282 56.942,21.464 C56.942,24.511 54.166,26.156 51.551,26.156 C50.024,26.156 48.014,25.459 47.127,24.121 C46.943,23.855 46.848,23.571 46.848,23.273 C46.848,22.529 47.551,21.849 48.322,21.849 Z M110.666,10.167 C113.471,10.167 115.61,12.293 115.61,15.087 L115.61,20.947 C115.61,23.737 113.47,26.151 110.666,26.151 L110.585,26.151 C109.781,26.151 108.885,25.926 108.348,25.45 L108.348,32.745 C108.348,33.52 107.715,34.15 106.936,34.15 C106.156,34.15 105.523,33.52 105.523,32.745 L105.523,21.596 C105.506,21.43 105.523,21.26 105.523,21.091 L105.523,15.227 C105.523,12.435 107.779,10.167 110.585,10.167 L110.665,10.167 L110.666,10.167 Z M112.86,21.091 L112.86,15.227 C112.86,14.022 111.877,13.047 110.666,13.047 L110.585,13.047 C109.373,13.047 108.389,14.022 108.389,15.227 L108.389,21.091 C108.389,22.621 109.373,23.272 110.585,23.272 L110.665,23.272 C111.877,23.272 112.86,22.62 112.86,21.091 Z M102.691,11.51 L102.699,11.51 L102.699,21.196 C102.699,23.929 100.451,26.156 97.692,26.156 L97.612,26.156 C94.85,26.156 92.604,23.929 92.604,21.196 L92.604,11.51 L92.615,11.51 C92.651,10.761 93.268,10.167 94.031,10.167 C94.794,10.167 95.413,10.761 95.448,11.51 L95.45,11.51 L95.45,11.545 C95.45,11.553 95.454,11.565 95.454,11.575 C95.454,11.585 95.45,11.595 95.45,11.605 L95.45,21.196 C95.45,22.377 96.416,23.334 97.611,23.334 L97.692,23.334 C98.882,23.334 99.851,22.377 99.851,21.196 L99.851,11.51 L99.859,11.51 C99.895,10.761 100.509,10.167 101.275,10.167 C102.039,10.167 102.655,10.761 102.691,11.51 Z M69.378,11.51 L69.384,11.51 L69.384,21.196 C69.384,23.929 67.139,26.156 64.376,26.156 L64.298,26.156 C61.538,26.156 59.29,23.929 59.29,21.196 L59.29,11.51 L59.301,11.51 C59.336,10.761 59.954,10.167 60.719,10.167 C61.479,10.167 62.099,10.761 62.135,11.51 L62.139,11.51 L62.139,21.196 C62.139,22.377 63.106,23.334 64.298,23.334 L64.376,23.334 C65.57,23.334 66.538,22.377 66.538,21.196 L66.538,11.51 L66.545,11.51 C66.581,10.761 67.199,10.167 67.961,10.167 C68.725,10.167 69.343,10.761 69.378,11.51 Z M84.621,10.167 C87.351,10.167 89.573,12.389 89.573,15.122 L89.573,24.804 L89.561,24.804 C89.526,25.551 88.916,26.147 88.161,26.147 C87.405,26.147 86.795,25.551 86.761,24.804 L86.757,24.804 L86.757,24.769 L86.754,24.739 C86.754,24.727 86.757,24.719 86.757,24.709 L86.757,15.122 C86.757,13.941 85.802,12.982 84.621,12.982 L84.543,12.982 C83.393,12.982 82.457,13.895 82.413,15.036 C82.413,15.066 82.416,15.097 82.416,15.13 L82.416,24.81 L82.406,24.81 C82.371,25.56 81.761,26.156 81.006,26.156 C80.531,26.156 80.114,25.919 79.86,25.559 C79.707,25.346 79.611,25.085 79.599,24.804 L79.592,24.804 L79.592,15.122 C79.592,15.093 79.596,15.067 79.596,15.038 C79.547,13.899 78.613,12.991 77.464,12.991 L77.386,12.991 C76.206,12.991 75.251,13.948 75.251,15.131 L75.251,24.811 L75.243,24.811 C75.209,25.559 74.598,26.156 73.843,26.156 C73.088,26.156 72.477,25.559 72.443,24.811 L72.436,24.811 L72.436,15.131 C72.436,12.397 74.657,10.176 77.386,10.176 L77.464,10.176 C78.85,10.176 80.101,10.748 81,11.668 C81.9,10.744 83.154,10.167 84.543,10.167 L84.621,10.167 Z M122.183,10.167 C123.737,10.167 125,11.435 125,12.988 C125,14.546 123.737,15.81 122.183,15.81 C120.629,15.81 119.366,14.546 119.366,12.988 C119.366,11.435 120.629,10.167 122.183,10.167 Z M122.183,15.127 C123.36,15.127 124.317,14.166 124.317,12.988 C124.317,11.812 123.36,10.858 122.183,10.858 C121.008,10.858 120.049,11.812 120.049,12.988 C120.049,14.166 121.009,15.126 122.183,15.126 L122.183,15.127 Z M121.244,11.87 C121.244,11.683 121.385,11.578 121.534,11.578 L122.235,11.578 C122.752,11.578 123.09,11.895 123.09,12.375 C123.09,12.753 122.858,13.026 122.494,13.095 L123.001,13.642 C123.079,13.728 123.122,13.797 123.122,13.894 C123.122,13.978 123.048,14.164 122.824,14.164 C122.674,14.164 122.622,14.11 122.549,14.021 L121.835,13.116 L121.827,13.116 L121.827,13.853 C121.827,14.059 121.704,14.164 121.535,14.164 C121.368,14.164 121.244,14.059 121.244,13.853 L121.244,11.87 Z M121.827,12.684 L122.209,12.684 C122.4,12.684 122.509,12.557 122.509,12.397 C122.509,12.221 122.374,12.118 122.209,12.118 L121.827,12.118 L121.827,12.684 Z\"\n});\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 125,\n    height: 37,\n    viewBox: \"0 0 125 37\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/logo.73abbbdf.svg\";\nexport { SvgComponent as ReactComponent };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Heading, Button, Text, Input, Label } from '@sumup/circuit-ui';\nimport styled, { css } from 'react-emotion';\n\nfunction Start({ navigate, resetScore, setCurrentUser, currentUser }) {\n  const handleStartGame = () => {\n    resetScore();\n    navigate('play');\n  };\n\n  const handleChange = event => {\n    const { value } = event.target;\n    setCurrentUser(value);\n  };\n  return (\n    <>\n      <Heading>SumUp Trivia</Heading>\n      <Label htmlFor=\"username\">What's your name?</Label>\n      <Input\n        onChange={handleChange}\n        value={currentUser}\n        placeholder=\"Jane\"\n        id=\"username\"\n      />\n      <Button primary onClick={handleStartGame} disabled={!currentUser}>\n        Start Game\n      </Button>\n      <Button\n        style={{ marginTop: '16px' }}\n        onClick={() => navigate('leaderboard')}\n        plain\n      >\n        View leaderboard\n      </Button>\n    </>\n  );\n}\n\nexport default Start;\n","import Start from './Start';\n\nexport default Start;\n","import PropTypes from 'prop-types';\nimport styled, { css } from 'react-emotion';\nimport { Heading } from '@sumup/circuit-ui';\n\nconst baseStyles = ({ theme }) => css`\n  font-weight: ${theme.fontWeight.regular};\n`;\n\nconst Question = styled(Heading)(baseStyles);\n\nQuestion.propTypes = {\n  children: PropTypes.string.isRequired\n};\n\n/**\n * @component\n */\nexport default Question;\n","import Question from './Question';\n\nexport default Question;\n","import PropTypes from 'prop-types';\nimport styled, { css } from 'react-emotion';\nimport { RadioButton } from '@sumup/circuit-ui';\n\nconst baseStyles = ({ theme }) => css`\n  width: 50%;\n  padding: 4px ${theme.spacings.kilo};\n  cursor: pointer;\n\n  &::before,\n  &::after {\n    content: none;\n    box-sizing: border-box;\n    height: auto;\n    width: auto;\n    background-color: transparent;\n    border-radius: 0;\n    display: inline;\n    position: static;\n    transform: none;\n    margin-left: ${theme.spacings.bit};\n    opacity: 1;\n  }\n\n  &:hover {\n    background-color: #ffc859;\n    border-radius: 30px;\n  }\n`;\n\nconst checkedStyles = ({ theme, checked }) =>\n  checked &&\n  css`\n    font-weight: ${theme.fontWeight.bold};\n  `;\n\nconst correctStyles = ({ theme, selected, correct }) =>\n  selected &&\n  correct &&\n  css`\n    opacity: 1;\n    color: ${theme.colors.success};\n\n    &::after {\n      content: '✅';\n    }\n  `;\n\nconst incorrectStyles = ({ theme, checked, correct }) =>\n  checked &&\n  !correct &&\n  css`\n    opacity: 1;\n    color: ${theme.colors.danger};\n\n    &::after {\n      content: '❌';\n    }\n  `;\n\nconst Answer = styled(RadioButton)(\n  baseStyles,\n  checkedStyles,\n  correctStyles,\n  incorrectStyles\n);\n\nAnswer.propTypes = {\n  correct: PropTypes.bool,\n  selected: PropTypes.string,\n  checked: PropTypes.bool\n};\n\nAnswer.defaultProps = {\n  checked: false\n};\n\n/**\n * @component\n */\nexport default Answer;\n","import Answer from './Answer';\n\nexport default Answer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Answer from './components/Answer';\nimport styled, { css } from 'react-emotion';\n\nconst containerStyles = ({ theme }) => css`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: ${theme.spacings.kilo};\n`;\n\nconst Container = styled('div')(containerStyles);\n\nconst AnswerList = ({ answers, onSelect, selected, correct }) => {\n  return (\n    <Container>\n      {answers &&\n        answers.map(({ option, id, className, ...props }) => (\n          <Answer\n            key={id}\n            value={id}\n            name=\"answer-list\"\n            onToggle={onSelect}\n            selected={selected}\n            disabled={selected}\n            checked={id === selected}\n            aria-labelledby=\"question\"\n            role=\"radiogroup\"\n            correct={id === correct}\n          >\n            {option}\n          </Answer>\n        ))}\n    </Container>\n  );\n};\n\nAnswerList.propTypes = {\n  answers: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      option: PropTypes.string.isRequired\n    })\n  ),\n  onSelect: PropTypes.func.isRequired,\n  selected: PropTypes.string\n};\n\nAnswerList.defaultProps = {\n  answers: [],\n  selected: null\n};\n\n/**\n * @component\n */\nexport default AnswerList;\n","import AnswerList from './AnswerList';\n\nexport default AnswerList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Heading, Button, Text, Badge } from '@sumup/circuit-ui';\nimport styled, { css } from 'react-emotion';\n\nimport randomNumber from '../../utils/random-number';\nimport Question from '../../components/Question';\nimport AnswerList from '../../components/AnswerList';\nimport questions from '../../input.json';\n\nconst ScoreBadge = styled(Badge)`\n  display: block;\n  margin: 0 auto 16px;\n`;\n\nclass App extends Component {\n  static propTypes = {\n    questions: PropTypes.array\n  };\n\n  state = {\n    selected: null,\n    question: questions[0]\n  };\n\n  getQuestion = () => {\n    const currentQuestionId = this.state.question.id;\n    const nextQuestionId = Number(currentQuestionId) + 1;\n\n    if (nextQuestionId === questions.length) {\n      return null;\n    }\n\n    return questions[nextQuestionId];\n  };\n\n  handleAnswer = event => {\n    const { value } = event.target;\n    const correct = value === this.state.question.answer;\n    this.setState({ selected: value, correct });\n  };\n\n  handleNextQuestion = () => {\n    const nextQuestion = this.getQuestion();\n    this.props.incrementScore();\n\n    if (nextQuestion === null) {\n      this.finish();\n      return;\n    }\n\n    this.setState({ question: nextQuestion, selected: null });\n  };\n\n  finish = () => {\n    const { navigate, updateLeaderboard } = this.props;\n    updateLeaderboard();\n    navigate('finish');\n  };\n\n  render() {\n    const { navigate, score } = this.props;\n    const { question, selected, correct } = this.state;\n\n    return (\n      <>\n        <ScoreBadge color=\"warning\">{`💸 ${score}`}</ScoreBadge>\n        <Question id=\"question\">{question.question}</Question>\n        <AnswerList\n          answers={question.options}\n          onSelect={this.handleAnswer}\n          selected={selected}\n          correct={question.answer}\n        />\n        {selected && correct && (\n          <Button onClick={this.handleNextQuestion}>Next</Button>\n        )}\n        {selected && !correct && <Button onClick={this.finish}>Finish</Button>}\n        <Button\n          plain\n          style={{ marginTop: '16px' }}\n          onClick={() => navigate('start')}\n        >\n          Restart Game\n        </Button>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import Trivia from './Trivia';\n\nexport default Trivia;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from '@sumup/circuit-ui';\n\n/**\n * Describe Leaderboard here.\n */\nconst Leaderboard = ({ leaderboard }) => {\n  const rows = leaderboard\n    .sort((a, b) => b.score - a.score)\n    .map(({ user, score }) => [user, `${score}`]);\n\n  return (\n    <div style={{ marginBottom: '16px' }}>\n      <Table headers={['Username', 'Score']} rows={rows} rowHeaders={false} />\n    </div>\n  );\n};\n\nLeaderboard.propTypes = {\n  /**\n   * A consice description of the example prop.\n   */\n  example: PropTypes.string\n};\n\nLeaderboard.defaultProps = {};\n\n/**\n * @component\n */\nexport default Leaderboard;\n","import Leaderboard from './Leaderboard';\n\nexport default Leaderboard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Heading, Button, Text } from '@sumup/circuit-ui';\nimport styled, { css } from 'react-emotion';\n\nimport Leaderboard from '../../components/Leaderboard';\nimport questions from '../../input.json';\n\nfunction Finish({ navigate, score, leaderboard }) {\n  const isMillionaire = questions.length === score;\n\n  if (isMillionaire) {\n    return (\n      <>\n        <Heading>You're a millionare! 💰</Heading>\n        <Text>You have answered all {score} questions correctly! 🎉</Text>\n        <Leaderboard leaderboard={leaderboard} />\n        <Button primary onClick={() => navigate('start')}>\n          Play again\n        </Button>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Heading>GAME OVER ☠️</Heading>\n      <Text>You have answered {score} questions correctly.</Text>\n      <Leaderboard leaderboard={leaderboard} />\n      <Button primary onClick={() => navigate('start')}>\n        Start Over\n      </Button>\n    </>\n  );\n}\n\nexport default Finish;\n","import Finish from './Finish';\n\nexport default Finish;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Heading, Button, Text } from '@sumup/circuit-ui';\nimport styled, { css } from 'react-emotion';\n\nimport Leaderboard from '../../components/Leaderboard';\nimport questions from '../../input.json';\n\nfunction Page({ navigate, leaderboard }) {\n  return (\n    <>\n      <Heading>Leaderboard 💯</Heading>\n      <Leaderboard leaderboard={leaderboard} />\n      <Button onClick={() => navigate('start')}>Return home</Button>\n    </>\n  );\n}\n\nexport default Page;\n","import Leaderboard from './Leaderboard';\n\nexport default Leaderboard;\n","import React, { Component } from 'react';\nimport styled, { css } from 'react-emotion';\nimport { ThemeProvider } from 'emotion-theming';\nimport { Card, theme as themes, injectGlobalStyles } from '@sumup/circuit-ui';\n\nimport { ReactComponent as LogoIcon } from './assets/logo.svg';\nimport Start from './pages/Start';\nimport Trivia from './pages/Trivia';\nimport Finish from './pages/Finish';\nimport Leaderboard from './pages/Leaderboard';\n\nconst { circuit } = themes;\n\n// Inject Circuit UI's global styles into the DOM.\ninjectGlobalStyles({\n  theme: circuit,\n  /**\n   * Customizations of the global styles are done like this.\n   * Note that we are passing in a template literal without\n   * using the css macro.\n   */\n\n  custom: `\n    body {\n      background-color: ${circuit.colors.n100};\n    }\n  `\n});\n\nconst pageMap = {\n  start: Start,\n  play: Trivia,\n  finish: Finish,\n  leaderboard: Leaderboard\n};\n\nconst Logo = styled(LogoIcon)`\n  ${({ theme }) => css`\n    display: block;\n    fill: ${theme.colors.white};\n    margin-bottom: ${theme.spacings.tera};\n    margin-top: ${theme.spacings.peta};\n  `};\n`;\n\nconst Container = styled('article')`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  max-width: 400px;\n  min-height: 100vh;\n  margin: 0 auto;\n`;\n\nclass App extends Component {\n  state = {\n    route: 'start',\n    score: 0,\n    currentUser: '',\n    leaderboard: []\n  };\n\n  navigate = route => {\n    this.setState({ route });\n  };\n\n  incrementScore = () => {\n    this.setState(prevState => ({ score: prevState.score + 1 }));\n  };\n\n  resetScore = () => {\n    this.setState({ score: 0 });\n  };\n\n  setCurrentUser = currentUser => {\n    this.setState({ currentUser });\n  };\n\n  updateLeaderboard = () => {\n    this.setState(prevState => {\n      const { currentUser: user, score, leaderboard } = prevState;\n      return {\n        leaderboard: [...leaderboard, { user, score }]\n      };\n    });\n  };\n\n  render() {\n    const Page = pageMap[this.state.route];\n    return (\n      <ThemeProvider theme={circuit}>\n        <Container>\n          <Logo data-testid=\"sumup-logo\" />\n          <Card>\n            <Page\n              {...this.state}\n              navigate={this.navigate}\n              resetScore={this.resetScore}\n              incrementScore={this.incrementScore}\n              setCurrentUser={this.setCurrentUser}\n              updateLeaderboard={this.updateLeaderboard}\n            />\n          </Card>\n        </Container>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}